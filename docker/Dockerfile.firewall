# Please change the base image to the appropriate CUDA version base on NVIDIA Driver Compatibility
# Run nvidia-smi to check the CUDA version and the corresponding driver version
# Then update the base image to the appropriate CUDA version refer https://catalog.ngc.nvidia.com/orgs/nvidia/containers/cuda/tags

FROM nvidia/cuda:12.4.1-runtime-ubuntu22.04 AS base 

# 1. Install dependencies only when needed
FROM base AS devel

# Install g++ 11
RUN apt update && apt install -y gcc-11 g++-11 cpp-11 jq xsel curl gnupg make python3-dev dnsmasq nginx iproute2 && curl -sL https://deb.nodesource.com/setup_20.x | bash - && apt install nodejs -y && rm -rf /var/lib/apt/lists/*

# Update alternatives for GCC and related tools
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 110 \
                         --slave /usr/bin/g++ g++ /usr/bin/g++-11 \
                         --slave /usr/bin/gcov gcov /usr/bin/gcov-11 \
                         --slave /usr/bin/gcc-ar gcc-ar /usr/bin/gcc-ar-11 \
                         --slave /usr/bin/gcc-ranlib gcc-ranlib /usr/bin/gcc-ranlib-11 && \
    update-alternatives --install /usr/bin/cpp cpp /usr/bin/cpp-11 110

RUN npm install -g yarn

RUN mkdir -p /etc/dnsmasq.d/

WORKDIR /app

FROM devel AS release

EXPOSE 80

COPY ./common/dnsmasq.conf /etc/dnsmasq.conf
COPY ./common/blocked-domains.txt /etc/dnsmasq.d/blocked-domains.txt

COPY ./common/entrypoint-firewall.sh /usr/local/bin/entrypoint.sh

COPY ./common/routes.txt /app/routes.txt
COPY ./common/generate_nginx_conf.sh /usr/local/bin/generate_nginx_conf.sh
COPY ./common/nginx.conf /etc/nginx/nginx.conf

RUN chmod +x /usr/local/bin/entrypoint.sh

HEALTHCHECK --interval=300s --timeout=30s --start-period=10s --retries=3 \
  CMD curl -f http://127.0.0.1/api/system || exit 1

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
