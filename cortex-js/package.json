{
  "name": "cortexso",
  "version": "0.0.1",
  "description": "Cortex is an openAI-compatible local AI server that developers can use to build LLM apps. It is packaged with a Docker-inspired command-line interface and a Typescript client library. It can be used as a standalone server, or imported as a library.",
  "author": "Jan <service@jan.ai>",
  "license": "AGPL-3.0",
  "homepage": "https://github.com/janhq/cortex",
  "bin": {
    "cortex": "./dist/src/command.js"
  },
  "main": "dist/src/index.js",
  "types": "dist/src/index.d.ts",
  "scripts": {
    "dev": "nest dev",
    "compile": "npx ncc build ./dist/src/command.js -o command",
    "build": "nest build",
    "build:binary": "yarn build && yarn compile && npx -q patch-package && npx @yao-pkg/pkg .",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "build:extensions": "run-script-os",
    "build:extensions:windows": "powershell -command \"$jobs = Get-ChildItem -Path './src/extensions' -Directory | ForEach-Object { Start-Job -Name ($_.Name) -ScriptBlock { param($_dir); try { Set-Location $_dir; yarn; yarn build; Write-Output 'Build successful in ' + $_dir } catch { Write-Error 'Error in ' + $_dir; throw } } -ArgumentList $_.FullName }; $jobs | Wait-Job; $jobs | ForEach-Object { Receive-Job -Job $_ -Keep } | ForEach-Object { Write-Host $_ }; $failed = $jobs | Where-Object { $_.State -ne 'Completed' -or $_.ChildJobs[0].JobStateInfo.State -ne 'Completed' }; if ($failed) { Exit 1 }\"",
    "build:extensions:linux": "for dir in ./src/extensions/*/; do (cd \"$dir\" && yarn && yarn build); done",
    "build:extensions:macos": "for dir in ./src/extensions/*/; do (cd \"$dir\" && yarn && yarn build); done",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/src/main --trace-deprecation",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "typeorm": "typeorm-ts-node-esm",
    "build:dev": "yarn build && run-script-os && npm link",
    "build:dev:windows": "echo 'Windows build complete'",
    "build:dev:macos": "chmod +x ./dist/src/command.js",
    "build:dev:linux": "chmod +x ./dist/src/command.js",
    "preuninstall": "node ./uninstall.js"
  },
  "dependencies": {
    "@cortexso/cortex.js": "^0.1.3",
    "@huggingface/gguf": "^0.1.5",
    "@huggingface/hub": "^0.15.1",
    "@nestjs/axios": "^3.0.2",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.2.2",
    "@nestjs/core": "^10.0.0",
    "@nestjs/devtools-integration": "^0.1.6",
    "@nestjs/event-emitter": "^2.0.4",
    "@nestjs/mapped-types": "*",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/sequelize": "^10.0.1",
    "@nestjs/swagger": "^7.3.1",
    "@terascope/fetch-github-release": "^0.8.8",
    "axios": "^1.6.8",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "cli-progress": "^3.12.0",
    "cortex-cpp": "0.4.34",
    "cpu-instructions": "^0.0.11",
    "decompress": "^4.2.1",
    "js-yaml": "^4.1.0",
    "nest-commander": "^3.13.0",
    "ora": "5.4.1",
    "readline": "^1.3.0",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "sequelize": "^6.37.3",
    "sequelize-typescript": "^2.1.6",
    "sqlite3": "^5.1.7",
    "systeminformation": "^5.22.11",
    "ulid": "^2.3.0",
    "uuid": "^9.0.1",
    "whatwg-url": "^14.0.0",
    "yaml": "^2.4.2"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/cli-progress": "^3.11.5",
    "@types/decompress": "^4.2.7",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/js-yaml": "^4.0.9",
    "@types/node": "^20.12.9",
    "@types/sequelize": "^4.28.20",
    "@types/supertest": "^6.0.2",
    "@types/update-notifier": "^6.0.8",
    "@types/uuid": "^9.0.8",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "@vercel/ncc": "^0.38.0",
    "@yao-pkg/pkg": "^5.12.0",
    "cpx": "^1.5.0",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "hanbi": "^1.0.3",
    "is-primitive": "^3.0.1",
    "jest": "^29.5.0",
    "nest-commander-testing": "^3.3.0",
    "node-gyp": "^10.1.0",
    "patch-package": "^8.0.0",
    "prettier": "^3.0.0",
    "resedit-cli": "^2.0.0",
    "run-script-os": "^1.1.6",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "resolutions": {
    "ajv": "8.15.0",
    "whatwg-url": "14.0.0"
  },
  "files": [
    "dist"
  ],
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "moduleNameMapper": {
      "@/(.*)$": "<rootDir>/$1",
      "@commanders/(.*)$": "<rootDir>/../src/infrastructure/commanders/$1"
    }
  },
  "pkg": {
    "scripts": "command/**/*.js",
    "assets": [
      "command/*.node",
      "**/package.json",
      "node_modules/axios/**/*",
      "node_modules/swagger-ui-dist/",
      "**/main.js",
      "node_modules/cortex-cpp/**/*",
      "dist/src/utils/cortex-cpp/**/*",
      "**/cortex-cpp.js"
    ],
    "outputPath": "dist"
  }
}
